- name: setup server
  hosts: webservers
  environment:
        AWS_ACCESS_KEY_ID: ""
        AWS_SECRET_ACCESS_KEY: ""
  tasks:
        - name: install packages
          apt:
                pkg:
                    - php7.4-cli
                    - php-xml
                    - php-pgsql
                    - libapache2-mod-php
                    - apache2
                    - git
                    - zip
                    - unzip
                    - curl
                    - php-curl
#  state: latest
#  update_cache: yes
#  become: yes

          tasks:
- name: download composer installer
get_url:
  url: https://getcomposer.org/installer
  dest: /tmp/composer

- name: install composer
  shell: php /tmp/composer --install-dir=/usr/local/bin
  become: yes

  - name: rename composer executable
  shell: mv /usr/local/bin/composer.phar /usr/local/bin/composer
  become: yes

- name: set permissions for composer file
  file:
        path: /usr/local/bin/composer
        mode: a+x
        state: file
  become: yes

  - name: clone laravel codebase
  git:
        repo: https://github.com/laravel/laravel.git
        dest: /var/www/myapp
  become: yes
  
- name: take ownership of myapp folder
  file:
        path: /var/www/myapp
        owner: "{{ ansible_effective_user_id }}"
        group: "{{ ansible_effective_group_id }}"
  become: yes
    
- name: set permissions for Laravel storage folder
  file:
        path: /var/www/myapp/storage
        state: directory
        recurse: yes
        mode: '0755'
  become: yes
  
- name: install laravel dependencies
  composer:
        command: update
        working_dir: /var/www/myapp
  become: yes
  
- name: copy env file
  copy:
    src: /var/www/myapp/.env.example
    remote_src: yes
    dest: /var/www/myapp/.env
    owner: "{{ ansible_effective_user_id }}"
    group: "{{ ansible_effective_group_id }}"
    mode: '0644'
    become: yes
    
- name: copy apache config
  copy:
        src: stubs/myapp.conf
        dest: /etc/apache2/sites-available/myapp.conf
        owner: "{{ ansible_effective_user_id }}"
        group: "{{ ansible_effective_group_id }}"
        mode: '0644'
  become: yes

- name: set server name
  replace:
        path: /etc/apache2/sites-available/myapp.conf
        regexp: '$SERVER_NAME'
        replace: '{{ ansible_host }}'
  become: yes
  
- name: enable the new config
  shell: |
        a2ensite myapp.conf
        a2dissite 000-default.conf
        a2enmod rewrite
        service apache2 restart
  become: yes
